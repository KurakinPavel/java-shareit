DROP TABLE IF EXISTS PUBLIC.BOOKINGS;
DROP TABLE IF EXISTS PUBLIC.COMMENTS;
DROP TABLE IF EXISTS PUBLIC.ITEMS;
DROP TABLE IF EXISTS PUBLIC.ITEM_REQUESTS;
DROP TABLE IF EXISTS PUBLIC.USERS;

CREATE TABLE IF NOT EXISTS PUBLIC.USERS
(
    USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME    VARCHAR(255) NOT NULL,
    EMAIL   VARCHAR(100) NOT NULL,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (EMAIL)
);

CREATE TABLE IF NOT EXISTS PUBLIC.ITEM_REQUESTS
(
    ITEM_REQUEST_ID   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DESCRIPTION       VARCHAR(512) NOT NULL,
    ITEM_REQUESTER_ID INTEGER REFERENCES PUBLIC.USERS (USER_ID) ON DELETE CASCADE,
    CREATED           TIMESTAMP WITHOUT TIME ZONE NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.ITEMS
(
    ITEM_ID         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME            VARCHAR(255) NOT NULL,
    DESCRIPTION     VARCHAR(512) NOT NULL,
    AVAILABLE       INTEGER NOT NULL,
    OWNER_ID        INTEGER REFERENCES PUBLIC.USERS (USER_ID) ON DELETE CASCADE,
    ITEM_REQUEST_ID INTEGER REFERENCES PUBLIC.ITEM_REQUESTS (ITEM_REQUEST_ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.BOOKINGS
(
    BOOKING_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    START_DATE TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    END_DATE   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    ITEM_ID    INTEGER REFERENCES PUBLIC.ITEMS (ITEM_ID) ON DELETE CASCADE,
    BOOKER_ID  INTEGER REFERENCES PUBLIC.USERS (USER_ID) ON DELETE CASCADE,
    STATUS     INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.COMMENTS
(
    COMMENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    COMMENT    VARCHAR(1024) NOT NULL,
    ITEM_ID    INTEGER REFERENCES PUBLIC.ITEMS (ITEM_ID) ON DELETE CASCADE,
    AUTHOR_ID  INTEGER REFERENCES PUBLIC.USERS (USER_ID) ON DELETE CASCADE,
    CREATED    TIMESTAMP WITHOUT TIME ZONE NOT NULL
);
